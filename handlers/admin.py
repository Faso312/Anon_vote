from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Router, F, types
from .db import get_vote_results, clear_sheets
from .run import update_cand_list as update_
from keyboards.dinemic_kb import make_row_keyboard
from keyboards.static_kb import get_admin_kb, get_choice_keyboard


available_departmemts= ["–ê–¢–ü", "–ò–í–¢", "–ò–ë", "–ò–°–¢", "–ü—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ"]
key='00000'

router = Router()

class navigate(StatesGroup):
    insert_key=State()
    choose_department=State()


@router.callback_query(F.data == 'admin')
async def admin_kb(callback: types.CallbackQuery, state: FSMContext): # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞
    await state.clear()  
    await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á", reply_markup=ReplyKeyboardRemove())
    await state.set_state(navigate.insert_key)

@router.message(navigate.insert_key,F.text)
async def try_key(message: Message, state: FSMContext): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
    if message.text == key:
        await message.answer(f'–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', reply_markup=get_admin_kb())
    else: 
        await message.answer(f'–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á', reply_markup=ReplyKeyboardRemove())

# results_________________________________________
@router.callback_query(F.data == 'get_results')
async def running(callback: types.CallbackQuery, state: FSMContext): 
    try:
        await callback.message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ñ–µ–¥—Ä—É',reply_markup=make_row_keyboard(available_departmemts))
        await state.set_state(navigate.choose_department) #–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–≤–µ—Ç"
        await callback.answer() 
    except Exception as e:  await callback.message.answer(f'–û—à–∏–±–∫–∞: {e}, –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Ç—Å—Ç—Ä–∞—Ç–æ—Ä—É')
    

@router.message(navigate.choose_department, F.text.in_(available_departmemts))
async def setting_departmant(message: Message, state: FSMContext):  #–ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    await state.update_data(department=message.text)
    user_data = await state.get_data()   
    results=get_vote_results(int(available_departmemts.index(user_data['department'])))
    await message.answer(f"üéâ–ü–æ–∑–¥–∞—Ä–≤–ª—è–µ–º, {results[0]} —Å –∫–∞—Ñ–µ—Ä–¥—ã {user_data['department']}üéâ \n–ó–∞ —ç—Ç–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ {results[1]} —á–µ–ª–æ–≤–µ–∫", reply_markup=ReplyKeyboardRemove())
    await state.clear() 
# _________________________________________results

# update_________________________________________
@router.callback_query(F.data == 'update')
async def admin_kb(callback: types.CallbackQuery, state: FSMContext): # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞
    try:
        update_()
        await callback.message.answer(f"–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=ReplyKeyboardRemove())
        await callback.answer() 
        await state.clear()  
    except Exception as e:  await callback.message.answer(f'–û—à–∏–±–∫–∞: {e}, –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Ç—Å—Ç—Ä–∞—Ç–æ—Ä—É')
# _________________________________________update
    
# clear_sheet_________________________________________
@router.callback_query(F.data == 'clear_sheet')
async def admin_kb(callback: types.CallbackQuery, state: FSMContext): # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞
    await callback.message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ñ–µ–¥—Ä—É', reply_markup=make_row_keyboard(available_departmemts))
    await state.set_state(navigate.choose_department) #–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–≤–µ—Ç"
    await callback.answer() 

@router.message(navigate.choose_department, F.text.in_(available_departmemts))
async def setting_departmant(message: Message, state: FSMContext):  #–ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    user_data = await state.get_data()   
    clear_sheets(int(available_departmemts.index(user_data['department'])))
    await message.answer(f'–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', reply_markup=ReplyKeyboardRemove())
    await state.clear() 
# _________________________________________clear_sheet

    