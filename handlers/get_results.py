from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Router, F, types
from .DB import get_vote_results
from keyboards.dinemic_kb import make_row_keyboard


available_departmemts= ["–ê–¢–ü", "–ò–í–¢", "–ò–ë", "–ò–°–¢", "–ü—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ"]
key='00000'

router = Router()

class navigate(StatesGroup):
    choose_department=State()
    insert_key=State()

@router.callback_query(F.data == 'get_results')
async def running(callback: types.CallbackQuery, state: FSMContext): 
    await state.clear()  
    await callback.message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ñ–µ–¥—Ä—É',reply_markup=make_row_keyboard(available_departmemts))
    await state.set_state(navigate.choose_department) #–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–≤–µ—Ç"
    await callback.answer()
    


@router.message(navigate.choose_department, F.text.in_(available_departmemts))
async def setting_departmant(message: Message, state: FSMContext):  #–ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    await state.update_data(department=message.text)
    await message.answer(f"–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á", reply_markup=ReplyKeyboardRemove())
    await state.set_state(navigate.insert_key)
    
    
@router.message(navigate.insert_key,F.text)
async def try_key(message: Message, state: FSMContext):
    if message.text == key:
        user_data = await state.get_data()   
        results=get_vote_results(int(available_departmemts.index(user_data['department'])))
        await message.answer(f"üéâ–ü–æ–∑–¥–∞—Ä–≤–ª—è–µ–º, {results[0]} —Å –∫–∞—Ñ–µ—Ä–¥—ã {user_data['department']}üéâ \n–ó–∞ —ç—Ç–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ {results[1]} —á–µ–ª–æ–≤–µ–∫", reply_markup=ReplyKeyboardRemove())
        await state.clear()  
    else: 
        await message.answer(f'–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á',reply_markup=make_row_keyboard(available_departmemts))
    